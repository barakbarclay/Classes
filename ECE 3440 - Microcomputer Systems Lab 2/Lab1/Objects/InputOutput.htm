<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\InputOutput.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\InputOutput.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060183: Last Updated: Wed Apr 25 17:13:36 2018
<BR><P>
<H3>Maximum Stack Usage =          0 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>

<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[25]">ADC14_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ADC14_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[25]">ADC14_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[29]">AES256_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[13]">COMP_E0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[14]">COMP_E1_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[e]">CS_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2b]">DMA_ERR_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2f]">DMA_INT0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2e]">DMA_INT1_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2d]">DMA_INT2_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2c]">DMA_INT3_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1d]">EUSCIA0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1e]">EUSCIA1_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1f]">EUSCIA2_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[20]">EUSCIA3_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[21]">EUSCIB0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[22]">EUSCIB1_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[23]">EUSCIB2_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[24]">EUSCIB3_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[12]">FLCTL_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[11]">FPU_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[f]">PCM_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[30]">PORT1_IRQHandler</a> from inputoutput.o(i.PORT1_IRQHandler) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[31]">PORT2_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[32]">PORT3_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[33]">PORT4_IRQHandler</a> from inputoutput.o(i.PORT4_IRQHandler) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[34]">PORT5_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[35]">PORT6_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[d]">PSS_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[2a]">RTC_C_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[3a]">Reset_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from system_msp432p401r.o(i.SystemInit) referenced from startup_msp432p401r_uvision.o(.text)
 <LI><a href="#[26]">T32_INT1_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[27]">T32_INT2_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[28]">T32_INTC_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[15]">TA0_0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[16]">TA0_N_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[17]">TA1_0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[18]">TA1_N_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[19]">TA2_0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1a]">TA2_N_IRQHandler</a> from inputoutput.o(i.TA2_N_IRQHandler) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1b]">TA3_0_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[1c]">TA3_N_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[10]">WDT_A_IRQHandler</a> from startup_msp432p401r_uvision.o(.text) referenced from startup_msp432p401r_uvision.o(RESET)
 <LI><a href="#[3b]">__main</a> from __main.o(!!!main) referenced from startup_msp432p401r_uvision.o(.text)
 <LI><a href="#[39]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[38]">_sputc</a> from _sputc.o(.text) referenced from noretval__2sprintf.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[42]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[44]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[45]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[46]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[67]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[48]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[4a]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[4c]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[57]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[4e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[50]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[52]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[5c]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[43]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[54]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[56]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[58]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5b]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[5d]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3a]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC14_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC14_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>AES256_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>COMP_E0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>COMP_E1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>DMA_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DMA_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>DMA_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>DMA_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DMA_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EUSCIA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EUSCIA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EUSCIA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EUSCIA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EUSCIB0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>EUSCIB1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EUSCIB2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EUSCIB3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>FLCTL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>PCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PORT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PORT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>PORT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>PORT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>PSS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>T32_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>T32_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>T32_INTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TA0_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TA0_N_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TA1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TA1_N_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TA2_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TA3_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TA3_N_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>WDT_A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[3d]"></a>DisableInterrupts</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[3e]"></a>EnableInterrupts</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[3f]"></a>StartCritical</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[40]"></a>EndCritical</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[41]"></a>WaitForInterrupt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_msp432p401r_uvision.o(.text), UNUSED, KEPT)

<P><STRONG><a name="[5f]"></a>__2sprintf</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, noretval__2sprintf.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print8InDec
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print16InHex
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[62]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[63]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _printf_pad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[61]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, _printf_str.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[49]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, _printf_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[4b]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, _printf_hex_int.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[65]"></a>__printf</STRONG> (Thumb, 308 bytes, Stack size 0 bytes, __printf_flags_wp.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[64]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, _printf_intcommon.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[6e]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[60]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[38]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> noretval__2sprintf.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[4d]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[72]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[51]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[6d]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, lludiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[70]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[69]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 0 bytes, bigflt0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[73]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[55]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[5a]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[af]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[5e]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[6a]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[76]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[75]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[77]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 0 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[78]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[6b]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6c]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[79]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 0 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[87]"></a>AdjustPwm</STRONG> (Thumb, 158 bytes, Stack size 0 bytes, inputoutput.o(i.AdjustPwm))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[91]"></a>AdjustPwm2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, inputoutput.o(i.AdjustPwm2))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[7a]"></a>Advance7Seg</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, inputoutput.o(i.Advance7Seg))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
</UL>

<P><STRONG><a name="[ae]"></a>ChkI2C_2</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, inputoutput.o(i.ChkI2C_2))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestI2CExpanders
</UL>

<P><STRONG><a name="[7c]"></a>ClearDisplay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.ClearDisplay))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
</UL>

<P><STRONG><a name="[a5]"></a>ConfigurePinsAndInterrupts</STRONG> (Thumb, 226 bytes, Stack size 0 bytes, inputoutput.o(i.ConfigurePinsAndInterrupts))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[7f]"></a>DoMode1</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, inputoutput.o(i.DoMode1))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestI2CExpanders
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartupDelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondRow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C_FailSafe
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRow
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run3440Test
</UL>

<P><STRONG><a name="[88]"></a>DoMode2</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, inputoutput.o(i.DoMode2))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondRow
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print8InBinary
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C_FailSafe
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDisplay
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance7Seg
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run3440Test
</UL>

<P><STRONG><a name="[8b]"></a>DoMode3</STRONG> (Thumb, 230 bytes, Stack size 0 bytes, inputoutput.o(i.DoMode3))
<BR><BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondRow
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAdc
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMeter
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print16InHex
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C_FailSafe
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRow
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDisplay
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustPwm2
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run3440Test
</UL>

<P><STRONG><a name="[a0]"></a>EndTransaction</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.EndTransaction))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTemp
</UL>

<P><STRONG><a name="[85]"></a>FirstRow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.FirstRow))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[93]"></a>GenStart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.GenStart))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>

<P><STRONG><a name="[96]"></a>GenStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.GenStop))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>

<P><STRONG><a name="[92]"></a>InI2C</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inputoutput.o(i.InI2C))
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitStop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitStart
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitRx
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenStop
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenStart
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C_FailSafe
</UL>

<P><STRONG><a name="[86]"></a>InI2C_FailSafe</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, inputoutput.o(i.InI2C_FailSafe))
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[a2]"></a>InitAdc</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, inputoutput.o(i.InitAdc))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[a1]"></a>InitI2C</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inputoutput.o(i.InitI2C))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[98]"></a>InitLcd</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, inputoutput.o(i.InitLcd))
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShortDelay
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRsForCmd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PulseE
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[9c]"></a>InitTemp</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, inputoutput.o(i.InitTemp))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTransaction
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[81]"></a>InitializeSystem</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, inputoutput.o(i.InitializeSystem))
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupPwm
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupPeriodMeas
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTemp
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitI2C
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAdc
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigurePinsAndInterrupts
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableInterrupts
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[89]"></a>LcdChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, inputoutput.o(i.LcdChar))
<BR><BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRsForChar
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PulseE
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMeter
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print8InBinary
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
</UL>

<P><STRONG><a name="[7d]"></a>LcdCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, inputoutput.o(i.LcdCmd))
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRsForCmd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PulseE
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondRow
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintMeter
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRow
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDisplay
</UL>

<P><STRONG><a name="[7e]"></a>LongDelay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inputoutput.o(i.LongDelay))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartupDelay
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondRow
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FirstRow
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearDisplay
</UL>

<P><STRONG><a name="[a7]"></a>OutI2C</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, inputoutput.o(i.OutI2C))
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitTx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitStop
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitStart
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenStop
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GenStart
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
</UL>

<P><STRONG><a name="[7b]"></a>OutI2C_FailSafe</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, inputoutput.o(i.OutI2C_FailSafe))
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PulseE
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Advance7Seg
</UL>

<P><STRONG><a name="[30]"></a>PORT1_IRQHandler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, inputoutput.o(i.PORT1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PORT4_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, inputoutput.o(i.PORT4_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[8f]"></a>Print16InHex</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inputoutput.o(i.Print16InHex))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[8a]"></a>Print8InBinary</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, inputoutput.o(i.Print8InBinary))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
</UL>

<P><STRONG><a name="[a9]"></a>Print8InDec</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inputoutput.o(i.Print8InDec))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
</UL>

<P><STRONG><a name="[90]"></a>PrintMeter</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, inputoutput.o(i.PrintMeter))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[82]"></a>PrintString</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, inputoutput.o(i.PrintString))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print8InDec
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print16InHex
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[8d]"></a>PrintTemp</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, inputoutput.o(i.PrintTemp))
<BR><BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print8InDec
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[9a]"></a>PulseE</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, inputoutput.o(i.PulseE))
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C_FailSafe
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
</UL>

<P><STRONG><a name="[8e]"></a>ReadAdc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inputoutput.o(i.ReadAdc))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[9f]"></a>ReadData</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, inputoutput.o(i.ReadData))
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDqIn
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTemp
</UL>

<P><STRONG><a name="[8c]"></a>ReadTemp</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, inputoutput.o(i.ReadTemp))
<BR><BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTransaction
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EndTransaction
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
</UL>

<P><STRONG><a name="[ac]"></a>Run3440Test</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, inputoutput.o(i.Run3440Test))
<BR><BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartupDelay
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>SecondRow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.SecondRow))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode3
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode2
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[ab]"></a>SetDqIn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.SetDqIn))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>

<P><STRONG><a name="[ad]"></a>SetDqOut</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.SetDqOut))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTransaction
</UL>

<P><STRONG><a name="[a6]"></a>SetRsForChar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.SetRsForChar))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdChar
</UL>

<P><STRONG><a name="[99]"></a>SetRsForCmd</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, inputoutput.o(i.SetRsForCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdCmd
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
</UL>

<P><STRONG><a name="[a4]"></a>SetupPeriodMeas</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, inputoutput.o(i.SetupPeriodMeas))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[a3]"></a>SetupPwm</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, inputoutput.o(i.SetupPwm))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitializeSystem
</UL>

<P><STRONG><a name="[9b]"></a>ShortDelay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, inputoutput.o(i.ShortDelay))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLcd
</UL>

<P><STRONG><a name="[9d]"></a>StartTransaction</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, inputoutput.o(i.StartTransaction))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDqOut
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTemp
</UL>

<P><STRONG><a name="[84]"></a>StartupDelay</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, inputoutput.o(i.StartupDelay))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LongDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run3440Test
</UL>

<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, system_msp432p401r.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>TA2_N_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, inputoutput.o(i.TA2_N_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_msp432p401r_uvision.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TestI2CExpanders</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, inputoutput.o(i.TestI2CExpanders))
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChkI2C_2
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DoMode1
</UL>

<P><STRONG><a name="[95]"></a>WaitRx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inputoutput.o(i.WaitRx))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>

<P><STRONG><a name="[94]"></a>WaitStart</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inputoutput.o(i.WaitStart))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>

<P><STRONG><a name="[97]"></a>WaitStop</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inputoutput.o(i.WaitStop))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InI2C
</UL>

<P><STRONG><a name="[a8]"></a>WaitTx</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, inputoutput.o(i.WaitTx))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OutI2C
</UL>

<P><STRONG><a name="[9e]"></a>WriteData</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, inputoutput.o(i.WriteData))
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDqOut
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadTemp
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTemp
</UL>

<P><STRONG><a name="[6f]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[66]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[59]"></a>main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, inputoutput.o(i.main))
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Run3440Test
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[53]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[b2]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintTemp
</UL>

<P><STRONG><a name="[b0]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[b1]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[4f]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[47]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[68]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[39]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
