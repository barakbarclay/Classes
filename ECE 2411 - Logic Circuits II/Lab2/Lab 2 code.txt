1.) 

module Lab2P1(Y,A,B,C);
  output Y;
  input A,B,C;
  wire w1,w2;
  and g1(w1,A,B);
  and g2(w2,B,C);
  or g3(Y,w1,w2);
endmodule


2.)

module L1P2;
  wire Y;
  reg A,B,C;
  Lab2P1 M1(Y,A,B,C);
  
  initial
  begin
    A = 1'b0;B = 1'b0;C = 1'b0;
    #100 A = 1'b0;B = 1'b0;C = 1'b1;
    #100 A = 1'b0;B = 1'b1;C = 1'b0;
    #100 A = 1'b0;B = 1'b1;C = 1'b1;
    #100 A = 1'b1;B = 1'b0;C = 1'b0;
    #100 A = 1'b1;B = 1'b0;C = 1'b1;
    #100 A = 1'b1;B = 1'b1;C = 1'b0;
    #100 A = 1'b1;B = 1'b1;C = 1'b1;
  end
  
  initial #800 $stop;
endmodule


3.)

module L1P3(output X,Y, input A,B,C,D,E);
  assign Y = (A&&B&&C)||(A&&!D)||!(A&&!B&&C&&D);
  assign X = !(!(D&&E)||(A&&B&&!(C&&D)));
  endmodule


4.)

module L1P4(C,E,A,B,D);
output C,E;
input A,B,D;

L1P4UDP(C,A,B);
or (E,C,D);
endmodule

primitive L1P4UDP(output C, input A,B);

table 
//	A	B	:	C
	0	0	:	1;
	0	1	:	0;
	1	0	:	1;
	1	1	:	0;
endtable
endprimitive

module L1P4TB;
  wire C,E;
  reg A,B,D;

L1P4 M1(C,E,A,B,D);
  
  initial
  begin
    A = 1'b0;B = 1'b0;D = 1'b0;
    #100 A = 1'b0;B = 1'b0;D = 1'b1;
    #100 A = 1'b0;B = 1'b1;D = 1'b0;
    #100 A = 1'b0;B = 1'b1;D = 1'b1;
    #100 A = 1'b1;B = 1'b0;D = 1'b0;
    #100 A = 1'b1;B = 1'b0;D = 1'b1;
    #100 A = 1'b1;B = 1'b1;D = 1'b0;
    #100 A = 1'b1;B = 1'b1;D = 1'b1;
  end
  
  initial #800 $stop;
endmodule

